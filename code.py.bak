#!/usr/bin/env python
#-*- coding: utf-8 -*-

import web
import MySQLdb

urls = (
        "/", "Index",
        "/status/(.*)", "Status",
        "/count", "Count",
        "/login", "Login",
        "/Reset", "Reset",
        "/register", "Register"
        )
app = web.application(urls, globals())
db = web.database(dbn = "mysql", user = "faye", pw = "wufeishizhu.", 
        db = "web_test");
store = web.session.DBStore(db, "sessions")
session = web.session.Session(app, store, initializer={'count': 0})
render = web.template.render("templates/", globals={'context':session})

class Index:
    def Get(self):
        return render.index()
        
class Login: 
    def GET(self):
        session_data.count += 1
        return str(session_data.count)
#        if logged():
#            return web.seeother("/status/login_true") 
#    def POST(self):
#        user_data = web.input() 
#        var = dict(username = user_data.username)
#        var["passwd"] = user_data.passwd
#        result = db.select("user", var, where = "username = $username and passwd = $passwd").list()
#
#        if result == []:
#            raise web.seeother("/status/login_false") 
#        else:
#            session.login = 1
#            raise web.seeother("/status/login_true")

#class Count:
#    def GET(self):
#        session.count += 1
#        return str(session.count)
#
#def logged():
#    if session.login == 1:
#        return True
#    else:
#        return False
#
#class status:
#    def GET(self, flag):
#        return render.status(flag)

#class login:
#    def POST(self):
#        user_data = web.input()
#        result = db.select("user", dict(name=user_data.name), 
#                    where = "name = $name").list()
#        if result == []:
#            raise web.seeother("/status/login_false") 
#        else:
#            raise web.seeother("/status/login_true")
#
#class register:
#    def POST(self):
#        user_data = web.input()
#        try:
#            result = db.insert("user", name = user_data.name, 
#                    passwd = user_data.passwd)
#        except IntegrityError, e:
#            raise web.seeother("/status/register_false") 
#        except BaseException, e:
#            raise web.seeother("/status/register_false")
#        else:
#            raise web.seeother("/status/register_true")
#        
        
if __name__ == "__main__":
    app.run()
